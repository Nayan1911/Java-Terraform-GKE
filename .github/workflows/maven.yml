name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: us-central1
  IMAGE_NAME: sharmanayan/hello-world:0.1.RELEASE
  CREDENTIALS_FILE: "${{ secrets.GKE_SA_KEY }} | cat key.json | tr -s '\n' ' '"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Check tag
      run:
        echo ${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      run: |
        echo "Qwerty@12345" | docker login -u sharmanayan --password-stdin 
        docker build -t ${{ env.IMAGE_NAME }} .
        docker push ${{ env.IMAGE_NAME }}


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    # - name: Decode JSON key file
    #   run: echo "CREDENTIALS_FILE="${{ secrets.GKE_SA_KEY }} | cat key.json | tr -s '\n' ' '""

    - name: Initialize Terraform
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var="credentials_file=${{ env.CREDENTIALS_FILE }}" -auto-approve
    #       -var="credentials_file=CREDENTIALS_FILE" \
    #       -var="project_id=${{ secrets.GKE_PROJECT }}" \
    #       -var="region=your-region" \
    #       -var="zone=your-zone" \
    #       -var="cluster_name=your-cluster-name" \
    #       -auto-approve
    

    - name: Terraform Apply
      run: terraform apply -var="credentials_file=CREDENTIALS_FILE" -auto-approve

    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ secrets.GKE_PROJECT }}
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: apply -f deployment.yaml
